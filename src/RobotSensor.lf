target C {
    threading: false,
    build: "../scripts/build_nrf_unix.sh"   
};

preamble {=
    #include "lib/romi.h"
=}

main reactor {
    timer t(0, 100 msec);
    reaction(startup) {=
        // Initialize the robot.
        APP_ERROR_CHECK(romi_init());
    =}
    reaction(t) {=
        romi_sensors_t sensors;
        APP_ERROR_CHECK(romi_sensors_poll(&sensors));
        // print results
        printf("\n");
        printf("### Romi Sensor Values at index %d ###\n", sensors.time_stamp);
        printf("Bump left:\t%d\n", sensors.bumps.left);
        printf("Bump center:\t%d\n", sensors.bumps.center);
        printf("Bump right:\t%d\n", sensors.bumps.right);
        printf("\n");
        printf("Reflectance left:\t%d\n", sensors.reflectance.left);
        printf("Reflectance center:\t%d\n", sensors.reflectance.center);
        printf("Reflectance right:\t%d\n", sensors.reflectance.right);
        printf("\n");
        printf("Button left:\t%d\n", sensors.buttons.left);
        printf("Button right:\t%d\n", sensors.buttons.right);
        printf("\n");
        printf("Encoder left:\t%d\n", sensors.encoders.left);
        printf("Encoder right\t%d\n", sensors.encoders.right);
    =}
}

/**
* Display tilt angles of accelerometer
* and time on screen and printf
* @author Abhi Gundrala
*/
target C {
    threading: false,
    build: "../scripts/build_nrf_unix.sh",
};

import AccTilt from "lib/Tilt.lf"
import Display from "lib/Display.lf"
import ExpFilter, AvgFilter, FIRFilter from "lib/Filter.lf"

preamble {=
    #include <stdio.h>
=}

main reactor {
    // sensors
    tilt = new AccTilt();

    // displays
    dx = new Display(row = 0);
    dy = new Display(row = 1);

    // filters
    //unit_1 = new UnityFilter();
    fir_1 = new FIRFilter(h = (0.4, 0.3, 0.2, 0.1), size = 4);
    avg_1 = new ExpFilter(b = 0.6);
    avg_2 = new AvgFilter(size = 3);

    timer t(0, 250 msec);
    state i:int(0);

    # tilt xz pipeline
    tilt.roll -> fir_1.in;
    fir_1.out -> avg_1.in;

    # tilt yz pipeline
    tilt.pitch -> avg_2.in;


    reaction(startup) {=
        printf("startup");
    =}

    reaction(t) -> tilt.trigger, dx.message {=
        // construct and display t message
        static char x[BUCKLER_DISPLAY_WIDTH + 1];
        snprintf(x, BUCKLER_DISPLAY_WIDTH + 1, "i:%d", self->i++);
        lf_set(dx.message, x);

        lf_set(tilt.trigger, true);
    =}

    reaction(avg_1.out, avg_2.out) -> dy.message {=
        // construct and display filtered tilt
        static char x[BUCKLER_DISPLAY_WIDTH + 1];
        snprintf(x, BUCKLER_DISPLAY_WIDTH + 1, "xz:%.2f yz:%.2f", avg_1.out->value, avg_2.out->value);
        lf_set(dy.message, x);
    =}

}

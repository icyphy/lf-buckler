/**
 * Toggle LEDs on the Buckler daughter board periodically.
 * @author Abhi Gundrala
 */
target C {
    threading: false,
    build: "../scripts/build_nrf_unix.sh",
};

preamble {=
    #include "buckler.h"        // Defines BUCKLER_LED...
    #include "nrfx_gpiote.h"    // Defines nrfx_...
    // LED array
    static uint8_t LEDS[3] = {BUCKLER_LED0, BUCKLER_LED1, BUCKLER_LED2};
=}

/**
 * Importable reactor that flashes a distinctive pattern
 * on the LEDs on the Buckler daughter card.
 * This can be usefully included in other programs to indicate liveness.
 */
reactor FlashingLEDs {
    timer t1(0 sec, 1 sec);
    timer t2(0 sec, 2 sec);
    timer t3(0 sec, 3 sec);
    reaction(startup) {=
        ret_code_t error_code = NRF_SUCCESS;

        // Initialize GPIO driver.
        if (!nrfx_gpiote_is_init()) {
            error_code = nrfx_gpiote_init();
        }
        APP_ERROR_CHECK(error_code);

        // Configure LEDs.
        // Manually-controlled (simple) output, initially set.
        nrfx_gpiote_out_config_t out_config = NRFX_GPIOTE_CONFIG_OUT_SIMPLE(true);
        for (int i=0; i<3; i++) {
            error_code = nrfx_gpiote_out_init(LEDS[i], &out_config);
            APP_ERROR_CHECK(error_code);
        }
    =}
    reaction(t1) {=
        nrf_gpio_pin_toggle(BUCKLER_LED0);
    =}
    reaction(t2) {=
        nrf_gpio_pin_toggle(BUCKLER_LED1);
    =}
    reaction(t3) {=
        nrf_gpio_pin_toggle(BUCKLER_LED2);
    =}
}

main reactor {
    a = new FlashingLEDs();
}
